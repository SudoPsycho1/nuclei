id: graphql-introspection

info:
  name: GraphQL Introspection Detection
  author: Exceed
  severity: info
  tags: exposure,api,graphql

requests:
  - method: POST
    path:
      - "{{BaseURL}}"
      - "{{BaseURL}}/graphql"
      - "{{BaseURL}}/graphiql"
      - "{{BaseURL}}/graphql.php"
      - "{{BaseURL}}/graphql/console"
      - "{{BaseURL}}/v1"
      - "{{BaseURL}}/v2"
      - "{{BaseURL}}/v3"
      - "{{BaseURL}}/graphql-console"
      - "{{BaseURL}}/query-laravel"
      - "{{BaseURL}}/v3/subscriptions"
      - "{{BaseURL}}/v3/graphql/schema.xml"
      - "{{BaseURL}}/v3/graphql/schema.yaml"
      - "{{BaseURL}}/v3/playground"
      - "{{BaseURL}}/v3/graphql/schema.json"
      - "{{BaseURL}}/graphql/schema.yaml"
      - "{{BaseURL}}/graphql/schema.xml"
      - "{{BaseURL}}/graphql/schema.json"
      - "{{BaseURL}}/graphiql/finland"
      - "{{BaseURL}}/graphiql.css"
      - "{{BaseURL}}/graphql-devtools"
      - "{{BaseURL}}/graphql/v1"
      - "{{BaseURL}}/v1/graphql"
      - "{{BaseURL}}/v2/graphql"
      - "{{BaseURL}}/v3/graphql"
      - "{{BaseURL}}/v1/gql"
      - "{{BaseURL}}/v2/gql"
      - "{{BaseURL}}/v3/gql"
      - "{{BaseURL}}/api/graphql/v1"
      - "{{BaseURL}}/portal-graphql"
      - "{{BaseURL}}/graphql-playground"
      - "{{BaseURL}}/laravel-graphql-playground"
      - "{{BaseURL}}/query-explorer"
      - "{{BaseURL}}/sphinx-graphiql"
      - "{{BaseURL}}/express-graphql"
      - "{{BaseURL}}/query"
      - "{{BaseURL}}/HyperGraphQL"
      - "{{BaseURL}}/graphql/graphql-playground"
      - "{{BaseURL}}/graphql-playground-html"
      - "{{BaseURL}}/graph_cms"
      - "{{BaseURL}}/query-api"
      - "{{BaseURL}}/api/cask/graphql-playground"
      - "{{BaseURL}}/altair"
      - "{{BaseURL}}/playground"

    headers:
      Content-Type: application/json

    body: '{"query": "query IntrospectionQuery{__schema{queryType{name}mutationType{name}subscriptionType{name}types{...FullType}directives{name description locations args{...InputValue}}}}fragment FullType on __Type{kind name description fields(includeDeprecated:true){name description args{...InputValue}type{...TypeRef}isDeprecated deprecationReason}inputFields{...InputValue}interfaces{...TypeRef}enumValues(includeDeprecated:true){name description isDeprecated deprecationReason}possibleTypes{...TypeRef}}fragment InputValue on __InputValue{name description type{...TypeRef}defaultValue}fragment TypeRef on __Type{kind name ofType{kind name ofType{kind name ofType{kind name ofType{kind name ofType{kind name ofType{kind name ofType{kind name}}}}}}}}"}'

    matchers-condition: and
    matchers:
      - type: status
        status:
          - 200

      - type: word
        words:
          - '{"data":{"__schema":{'
